## See all tmux commands at: https://github.com/tmux/tmux/blob/609baea95e30201919a173ea1de1f750a15a9f8c/key-bindings.c#L342
## List keybinds: tmux list-keys

## Terminal
## Default shell can be set by the OS
#  set-option -g default-shell '/run/current-system/sw/bin/zsh'

## Colors
#  set -g default-terminal "screen-256color"
#  set -g default-terminal "tmux-256color"
set -ga terminal-overrides ",*256col*:Tc,alacritty:Tc"

#  set-option -g focus-events on

## Remove delay on Escape key so vim doesn't feel slow
set -sg escape-time 0

## Enable mouse support
set -g mouse on

## Copy text from attached tmux windows
set -g set-clipboard on

## Renumber windows on close
set -g renumber-windows on

## Configure status line
set -g status-position bottom
set -g display-time 1500
bind -n M-T set -g status # Toggle status line
source ~/dotfiles/tmux/tmux-gruvbox-dark.conf

set -g base-index 1
bind -n M-1 select-window -t 1
bind -n M-2 select-window -t 2
bind -n M-3 select-window -t 3
bind -n M-4 select-window -t 4
bind -n M-5 select-window -t 5
bind -n M-6 select-window -t 6

## Windows
bind -n C-M-k killp
bind -n C-t new-window -c '#{pane_current_path}'

bind -n C-Left  'swap-window -t -1; select-window -t -1'
bind -n C-Right 'swap-window -t +1; select-window -t +1'

## Smart pane switching with awareness of Vim splits.
## See: https://github.com/christoomey/vim-tmux-navigator
#  in_editor="ps -o state= -o comm= -t '#{pane_tty}' | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
#  in_editor="ps -o state= -o comm= -t '#{pane_tty}' | grep -iqE 'hx|vim'"
in_editor="ps -o state= -o comm= -t '#{pane_tty}' | grep -iqE 'vim|hx'"

## Panes (splits)
bind M-s split-window -h
bind M-u split-window -v
bind -n M-s if-shell $in_editor 'send M-s' 'split-window -h'
bind -n M-u if-shell $in_editor 'send M-u' 'split-window -v'

#  bind -n M-s split-window -h -c "#{pane_current_path}"
#  bind -n M-u split-window -v -c "#{pane_current_path}"

bind -n S-Up    if-shell $in_editor 'send S-Up'    'resize-pane -U 2'
bind -n S-Down  if-shell $in_editor 'send S-Down'  'resize-pane -D 2'
bind -n S-Left  if-shell $in_editor 'send S-Left'  'resize-pane -L 5'
bind -n S-Right if-shell $in_editor 'send S-Right' 'resize-pane -R 5'

#  bind -n M-W if-shell $in_editor 'send M-W' 'resize-pane -U 5'
#  bind -n M-A if-shell $in_editor 'send M-A' 'resize-pane -L 5'
#  bind -n M-S if-shell $in_editor 'send M-S' 'resize-pane -D 5'
#  bind -n M-D if-shell $in_editor 'send M-D' 'resize-pane -R 5'

bind -n M-j if-shell $in_editor 'send M-j' 'select-pane -L'
bind -n M-k if-shell $in_editor 'send M-k' 'select-pane -D'
bind -n M-i if-shell $in_editor 'send M-i' 'select-pane -U'
bind -n M-l if-shell $in_editor 'send M-l' 'select-pane -R'

## Reorder windows
bind -n C-S-Left  'swap-window -t -1; select-window -t -1'
bind -n C-S-Right 'swap-window -t +1; select-window -t +1'
#  bind -n M-J if-shell $in_editor 'send M-J' 'swap-window -t -1; select-window -t -1'
#  bind -n M-L if-shell $in_editor 'send M-L' 'swap-window -t +1; select-window -t +1'

## Tabs
bind -n C-j if-shell $in_editor 'send C-j' 'previous-window'
bind -n C-l if-shell $in_editor 'send C-l' 'next-window'
bind -n C-M-j previous-window
bind -n C-M-l next-window

## Hack to separate <C-i> from <Tab> in Neovim
bind -n C-i if-shell $in_editor 'send C-b i' 'send C-i'

## Copy Mode
setw -g mode-keys vi
bind -n M-, if-shell $in_editor 'send M-,' 'copy-mode'
bind -T copy-mode-vi C-r source-file ~/.config/tmux/tmux.conf
bind -T copy-mode-vi \;  command-prompt
bind -T copy-mode-vi i   send -X cursor-up
bind -T copy-mode-vi k   send -X cursor-down
bind -T copy-mode-vi j   send -X cursor-left
bind -T copy-mode-vi l   send -X cursor-right
bind -T copy-mode-vi C-i send -X halfpage-up
bind -T copy-mode-vi C-k send -X halfpage-down
bind -T copy-mode-vi v   send -X begin-selection
bind -T copy-mode-vi y   send -X copy-pipe
